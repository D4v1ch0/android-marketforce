package rp3.berlin.models.oportunidad;

import android.database.Cursor;

import java.util.ArrayList;
import java.util.List;

import rp3.data.entity.EntityBase;
import rp3.db.sqlite.DataBase;
import rp3.berlin.db.Contract;
import rp3.util.CursorUtils;

/**
 * Created by magno_000 on 15/05/2015.
 */
public class OportunidadResponsable extends EntityBase<OportunidadResponsable> {

    private long id;
    private int idOportunidad;
    private int _idOportunidad;
    private int idAgente;
    private String tipo;

    @Override
    public long getID() {
        return id;
    }

    @Override
    public void setID(long id) {
        this.id = id;
    }

    public int getIdOportunidad() {
        return idOportunidad;
    }

    public void setIdOportunidad(int idOportunidad) {
        this.idOportunidad = idOportunidad;
    }

    public int get_idOportunidad() {
        return _idOportunidad;
    }

    public void set_idOportunidad(int _idOportunidad) {
        this._idOportunidad = _idOportunidad;
    }

    public int getIdAgente() {
        return idAgente;
    }

    public void setIdAgente(int idAgente) {
        this.idAgente = idAgente;
    }

    public String getTipo() {
        return tipo;
    }

    public void setTipo(String tipo) {
        this.tipo = tipo;
    }

    @Override
    public boolean isAutoGeneratedId() {
        return true;
    }

    @Override
    public String getTableName() {
        return Contract.OportunidadResponsable.TABLE_NAME;
    }

    @Override
    public void setValues() {
        setValue(Contract.OportunidadResponsable.COLUMN_ID_AGENTE, this.idAgente);
        setValue(Contract.OportunidadResponsable.COLUMN_ID_OPORTUNIDAD, this.idOportunidad);
        setValue(Contract.OportunidadResponsable.COLUMN_ID_OPORTUNIDAD_INT, this._idOportunidad);
        setValue(Contract.OportunidadResponsable.COLUMN_TIPO, this.tipo);
    }

    @Override
    public Object getValue(String key) {
        return null;
    }

    @Override
    public String getDescription() {
        return null;
    }

    public static List<OportunidadResponsable> getResponsablesOportunidad(DataBase db, int idOportunidad) {
        Cursor c = db.query(Contract.OportunidadResponsable.TABLE_NAME, new String[] {Contract.OportunidadResponsable._ID, Contract.OportunidadResponsable.COLUMN_ID_OPORTUNIDAD,
                Contract.OportunidadResponsable.COLUMN_TIPO, Contract.OportunidadResponsable.COLUMN_ID_AGENTE}, Contract.OportunidadResponsable.COLUMN_ID_OPORTUNIDAD + " = ?", new String[] {idOportunidad + ""});

        List<OportunidadResponsable> list = new ArrayList<OportunidadResponsable>();
        while(c.moveToNext()){
            OportunidadResponsable cont = new OportunidadResponsable();
            cont.setID(CursorUtils.getInt(c, Contract.OportunidadResponsable._ID));
            cont.setIdOportunidad(CursorUtils.getInt(c, Contract.OportunidadResponsable.COLUMN_ID_OPORTUNIDAD));
            cont.setIdAgente(CursorUtils.getInt(c, Contract.OportunidadResponsable.COLUMN_ID_AGENTE));
            cont.setTipo(CursorUtils.getString(c, Contract.OportunidadResponsable.COLUMN_TIPO));
            list.add(cont);
        }
        c.close();
        return list;
    }

    public static OportunidadResponsable getResponsable(DataBase db, int idOportunidad, int idAgente) {
        Cursor c = db.query(Contract.OportunidadResponsable.TABLE_NAME,new String[] {Contract.OportunidadResponsable._ID, Contract.OportunidadResponsable.COLUMN_ID_OPORTUNIDAD,
                Contract.OportunidadResponsable.COLUMN_TIPO, Contract.OportunidadResponsable.COLUMN_ID_AGENTE}, Contract.OportunidadResponsable.COLUMN_ID_OPORTUNIDAD + " = ? AND " +
                Contract.OportunidadResponsable.COLUMN_ID_AGENTE + " = ?", new String[]{idOportunidad + "", idAgente + ""});

        OportunidadResponsable cont = null;
        if(c.moveToFirst()){
            cont = new OportunidadResponsable();
            cont.setID(CursorUtils.getInt(c, Contract.OportunidadResponsable._ID));
            cont.setIdOportunidad(CursorUtils.getInt(c, Contract.OportunidadResponsable.COLUMN_ID_OPORTUNIDAD));
            cont.setIdAgente(CursorUtils.getInt(c, Contract.OportunidadResponsable.COLUMN_ID_AGENTE));
            cont.setTipo(CursorUtils.getString(c, Contract.OportunidadResponsable.COLUMN_TIPO));
        }
        c.close();
        return cont;
    }

    public static List<OportunidadResponsable> getResponsablesOportunidadInt(DataBase db, long id) {
        Cursor c = db.query(Contract.OportunidadResponsable.TABLE_NAME, new String[] {Contract.OportunidadResponsable._ID, Contract.OportunidadResponsable.COLUMN_ID_OPORTUNIDAD,
                Contract.OportunidadResponsable.COLUMN_TIPO, Contract.OportunidadResponsable.COLUMN_ID_AGENTE}, Contract.OportunidadResponsable.COLUMN_ID_OPORTUNIDAD_INT + " = ?", new String[] {id + ""});

        List<OportunidadResponsable> list = new ArrayList<OportunidadResponsable>();
        while(c.moveToNext()){
            OportunidadResponsable cont = new OportunidadResponsable();
            cont.setID(CursorUtils.getInt(c, Contract.OportunidadResponsable._ID));
            cont.setIdOportunidad(CursorUtils.getInt(c, Contract.OportunidadResponsable.COLUMN_ID_OPORTUNIDAD));
            cont.setIdAgente(CursorUtils.getInt(c, Contract.OportunidadResponsable.COLUMN_ID_AGENTE));
            cont.setTipo(CursorUtils.getString(c, Contract.OportunidadResponsable.COLUMN_TIPO));
            list.add(cont);
        }
        c.close();
        return list;

    }

    public static void deleteResponsable (DataBase db, int idOportunidad, int idAgente)
    {
        long i = db.delete(Contract.OportunidadResponsable.TABLE_NAME, Contract.OportunidadResponsable.COLUMN_ID_OPORTUNIDAD + " = ? AND " +
                    Contract.OportunidadResponsable.COLUMN_ID_AGENTE + " = ?", new String[]{idOportunidad + "", idAgente + ""});
    }
}
