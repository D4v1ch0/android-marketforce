package rp3.berlin.models.pedido;

import android.database.Cursor;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import rp3.data.entity.EntityBase;
import rp3.db.sqlite.DataBase;
import rp3.berlin.db.Contract;
import rp3.util.CursorUtils;

/**
 * Created by magno_000 on 03/05/2016.
 */
public class ProductoPromocion extends EntityBase<ProductoPromocion> {

    private long id;
    private int idProducto;
    private int idEstablecimiento;
    private int idPuntoOperacion;
    private int idBeneficio;
    private Date fechaDesde;
    private Date fechaHasta;
    private double porcentajeDescuento;
    private String formaPagoAplica;

    private List<Integer> idFormaPago;

    @Override
    public long getID() {
        return id;
    }

    @Override
    public void setID(long id) {
        this.id = id;
    }

    @Override
    public boolean isAutoGeneratedId() {
        return true;
    }

    @Override
    public String getTableName() {
        return Contract.ProductoPromocion.TABLE_NAME;
    }

    public int getIdProducto() {
        return idProducto;
    }

    public void setIdProducto(int idProducto) {
        this.idProducto = idProducto;
    }

    public int getIdEstablecimiento() {
        return idEstablecimiento;
    }

    public void setIdEstablecimiento(int idEstablecimiento) {
        this.idEstablecimiento = idEstablecimiento;
    }

    public int getIdPuntoOperacion() {
        return idPuntoOperacion;
    }

    public void setIdPuntoOperacion(int idPuntoOperacion) {
        this.idPuntoOperacion = idPuntoOperacion;
    }

    public int getIdBeneficio() {
        return idBeneficio;
    }

    public void setIdBeneficio(int idBeneficio) {
        this.idBeneficio = idBeneficio;
    }

    public Date getFechaDesde() {
        return fechaDesde;
    }

    public void setFechaDesde(Date fechaDesde) {
        this.fechaDesde = fechaDesde;
    }

    public Date getFechaHasta() {
        return fechaHasta;
    }

    public void setFechaHasta(Date fechaHasta) {
        this.fechaHasta = fechaHasta;
    }

    public double getPorcentajeDescuento() {
        return porcentajeDescuento;
    }

    public void setPorcentajeDescuento(double porcentajeDescuento) {
        this.porcentajeDescuento = porcentajeDescuento;
    }

    public String getFormaPagoAplica() {
        return formaPagoAplica;
    }

    public void setFormaPagoAplica(String formaPagoAplica) {
        this.formaPagoAplica = formaPagoAplica;
    }

    public List<Integer> getIdFormaPago() {
        return idFormaPago;
    }

    public void setIdFormaPago(List<Integer> idFormaPago) {
        this.idFormaPago = idFormaPago;
    }

    public void setIdFormaPago(String idsFormaPago) {
        if(idsFormaPago != null)
        {
            idFormaPago = new ArrayList<Integer>();
            String[] formas = idsFormaPago.split("\\|");
            for(int i = 0; i < formas.length; i++)
                idFormaPago.add(Integer.parseInt(formas[i]));
        }
    }

    @Override
    public void setValues() {
        setValue(Contract.ProductoPromocion.COLUMN_ID_PRODUCTO, this.idProducto);
        setValue(Contract.ProductoPromocion.COLUMN_ID_ESTABLECIMIENTO, this.idEstablecimiento);
        setValue(Contract.ProductoPromocion.COLUMN_ID_PUNTO_OPERACION, this.idPuntoOperacion);
        setValue(Contract.ProductoPromocion.COLUMN_ID_BENEFICIO, this.idBeneficio);
        setValue(Contract.ProductoPromocion.COLUMN_FECHA_DESDE, this.fechaDesde);
        setValue(Contract.ProductoPromocion.COLUMN_FECHA_HASTA, this.fechaHasta);
        setValue(Contract.ProductoPromocion.COLUMN_PORCENTAJE_DESCUENTO, this.porcentajeDescuento);
        setValue(Contract.ProductoPromocion.COLUMN_FORMA_PAGO_APLICA, this.formaPagoAplica);
    }

    @Override
    public Object getValue(String key) {
        return null;
    }

    @Override
    public String getDescription() {
        return null;
    }

    public static ProductoPromocion getProductoPromocion(DataBase db, int idProducto) {
        long fecha = Calendar.getInstance().getTime().getTime();
        Cursor c = db.query(Contract.ProductoPromocion.TABLE_NAME, new String[] {Contract.ProductoPromocion._ID, Contract.ProductoPromocion.COLUMN_ID_PRODUCTO, Contract.ProductoPromocion.COLUMN_ID_ESTABLECIMIENTO,
                        Contract.ProductoPromocion.COLUMN_ID_PUNTO_OPERACION, Contract.ProductoPromocion.COLUMN_ID_BENEFICIO, Contract.ProductoPromocion.COLUMN_FECHA_DESDE, Contract.ProductoPromocion.COLUMN_FECHA_HASTA,
                        Contract.ProductoPromocion.COLUMN_PORCENTAJE_DESCUENTO, Contract.ProductoPromocion.COLUMN_FORMA_PAGO_APLICA}, Contract.ProductoPromocion.COLUMN_ID_PRODUCTO + " = ? AND " +
                        Contract.ProductoPromocion.COLUMN_FECHA_DESDE + " <= ? AND " + Contract.ProductoPromocion.COLUMN_FECHA_HASTA + " >= ? AND " + Contract.ProductoPromocion.COLUMN_FORMA_PAGO_APLICA + " IS NULL",
                new String[]{idProducto + "", fecha + "", fecha + ""},null, null, Contract.ProductoPromocion.COLUMN_PORCENTAJE_DESCUENTO + " DESC LIMIT 1");

        ProductoPromocion productoPromocion = null;
        while(c.moveToNext()){
            productoPromocion = new ProductoPromocion();
            productoPromocion.setID(CursorUtils.getInt(c, Contract.ProductoPromocion._ID));
            productoPromocion.setIdProducto(CursorUtils.getInt(c, Contract.ProductoPromocion.COLUMN_ID_PRODUCTO));
            productoPromocion.setIdEstablecimiento(CursorUtils.getInt(c, Contract.ProductoPromocion.COLUMN_ID_ESTABLECIMIENTO));
            productoPromocion.setIdPuntoOperacion(CursorUtils.getInt(c, Contract.ProductoPromocion.COLUMN_ID_PUNTO_OPERACION));
            productoPromocion.setIdBeneficio(CursorUtils.getInt(c, Contract.ProductoPromocion.COLUMN_ID_BENEFICIO));
            productoPromocion.setFechaDesde(CursorUtils.getDate(c, Contract.ProductoPromocion.COLUMN_FECHA_DESDE));
            productoPromocion.setFechaHasta(CursorUtils.getDate(c, Contract.ProductoPromocion.COLUMN_FECHA_HASTA));
            productoPromocion.setPorcentajeDescuento(CursorUtils.getDouble(c, Contract.ProductoPromocion.COLUMN_PORCENTAJE_DESCUENTO));
            productoPromocion.setFormaPagoAplica(CursorUtils.getString(c, Contract.ProductoPromocion.COLUMN_FORMA_PAGO_APLICA));
        }
        c.close();
        return productoPromocion;
    }

    public static List<ProductoPromocion> getProductoPromocionAll(DataBase db, int idProducto) {
        long fecha = Calendar.getInstance().getTime().getTime();
        Cursor c = db.query(Contract.ProductoPromocion.TABLE_NAME, new String[]{Contract.ProductoPromocion._ID, Contract.ProductoPromocion.COLUMN_ID_PRODUCTO, Contract.ProductoPromocion.COLUMN_ID_ESTABLECIMIENTO,
                        Contract.ProductoPromocion.COLUMN_ID_PUNTO_OPERACION, Contract.ProductoPromocion.COLUMN_ID_BENEFICIO, Contract.ProductoPromocion.COLUMN_FECHA_DESDE, Contract.ProductoPromocion.COLUMN_FECHA_HASTA,
                        Contract.ProductoPromocion.COLUMN_PORCENTAJE_DESCUENTO, Contract.ProductoPromocion.COLUMN_FORMA_PAGO_APLICA}, Contract.ProductoPromocion.COLUMN_ID_PRODUCTO + " = ? AND " +
                        Contract.ProductoPromocion.COLUMN_FECHA_DESDE + " <= ? AND " + Contract.ProductoPromocion.COLUMN_FECHA_HASTA + " >= ? ",
                new String[]{idProducto + "", fecha + "", fecha + ""}, null, null, Contract.ProductoPromocion.COLUMN_PORCENTAJE_DESCUENTO + " DESC");

        List<ProductoPromocion> list = new ArrayList<ProductoPromocion>();
        while(c.moveToNext()){
            ProductoPromocion productoPromocion = new ProductoPromocion();
            productoPromocion.setID(CursorUtils.getInt(c, Contract.ProductoPromocion._ID));
            productoPromocion.setIdProducto(CursorUtils.getInt(c, Contract.ProductoPromocion.COLUMN_ID_PRODUCTO));
            productoPromocion.setIdEstablecimiento(CursorUtils.getInt(c, Contract.ProductoPromocion.COLUMN_ID_ESTABLECIMIENTO));
            productoPromocion.setIdPuntoOperacion(CursorUtils.getInt(c, Contract.ProductoPromocion.COLUMN_ID_PUNTO_OPERACION));
            productoPromocion.setIdBeneficio(CursorUtils.getInt(c, Contract.ProductoPromocion.COLUMN_ID_BENEFICIO));
            productoPromocion.setFechaDesde(CursorUtils.getDate(c, Contract.ProductoPromocion.COLUMN_FECHA_DESDE));
            productoPromocion.setFechaHasta(CursorUtils.getDate(c, Contract.ProductoPromocion.COLUMN_FECHA_HASTA));
            productoPromocion.setPorcentajeDescuento(CursorUtils.getDouble(c, Contract.ProductoPromocion.COLUMN_PORCENTAJE_DESCUENTO));
            productoPromocion.setFormaPagoAplica(CursorUtils.getString(c, Contract.ProductoPromocion.COLUMN_FORMA_PAGO_APLICA));
            productoPromocion.setIdFormaPago(productoPromocion.getFormaPagoAplica());
            list.add(productoPromocion);
        }
        c.close();
        return list;
    }

}
