package rp3.berlin.models.pedido;

import android.database.Cursor;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import rp3.data.entity.EntityBase;
import rp3.db.QueryDir;
import rp3.db.sqlite.DataBase;
import rp3.berlin.db.Contract;
import rp3.util.CursorUtils;

/**
 * Created by magno_000 on 27/04/2017.
 */

public class Stock extends EntityBase<Stock> {

    private long id;
    private String item;
    private String idBodega;
    private double stockDisponible;
    private double stockFisico;
    private Date fecha;

    private String bodegaDescripcion;

    @Override
    public long getID() {
        return id;
    }

    @Override
    public void setID(long id) {
        this.id = id;
    }

    @Override
    public boolean isAutoGeneratedId() {
        return true;
    }

    @Override
    public String getTableName() {
        return Contract.Stock.TABLE_NAME;
    }

    public String getItem() {
        return item;
    }

    public void setItem(String item) {
        this.item = item;
    }

    public String getIdBodega() {
        return idBodega;
    }

    public void setIdBodega(String idBodega) {
        this.idBodega = idBodega;
    }

    public double getStockDisponible() {
        return stockDisponible;
    }

    public void setStockDisponible(double stockDisponible) {
        this.stockDisponible = stockDisponible;
    }

    public double getStockFisico() {
        return stockFisico;
    }

    public void setStockFisico(double stockFisico) {
        this.stockFisico = stockFisico;
    }

    public Date getFecha() {
        return fecha;
    }

    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }

    public String getBodegaDescripcion() {
        return bodegaDescripcion;
    }

    public void setBodegaDescripcion(String bodegaDescripcion) {
        this.bodegaDescripcion = bodegaDescripcion;
    }

    @Override
    public void setValues() {
        setValue(Contract.Stock.COLUMN_ID_BODEGA, this.idBodega);
        setValue(Contract.Stock.COLUMN_ITEM, this.item);
        setValue(Contract.Stock.COLUMN_STOCK_DISPONIBLE, this.stockDisponible);
        setValue(Contract.Stock.COLUMN_STOCK_FISICO, this.stockFisico);
        setValue(Contract.Stock.COLUMN_FECHA, this.fecha);
    }

    @Override
    public Object getValue(String key) {
        return idBodega;
    }

    @Override
    public String getDescription() {
        return item;
    }

    public static List<Stock> getStock(DataBase db, String item) {
        String query = QueryDir.getQuery( Contract.Stock.QUERY_GET_STOCK );
        Cursor c = db.rawQuery(query, new String[]{item});

        List<Stock> list = new ArrayList<Stock>();
        while (c.moveToNext()) {
            Stock stock = new Stock();
            stock.setID(CursorUtils.getInt(c, Contract.Stock._ID));
            stock.setItem(CursorUtils.getString(c, Contract.Stock.COLUMN_ITEM));
            stock.setIdBodega(CursorUtils.getString(c, Contract.Stock.COLUMN_ID_BODEGA));
            stock.setStockDisponible(CursorUtils.getDouble(c, Contract.Stock.COLUMN_STOCK_DISPONIBLE));
            stock.setStockFisico(CursorUtils.getDouble(c, Contract.Stock.COLUMN_STOCK_FISICO));
            stock.setFecha(CursorUtils.getDate(c, Contract.Stock.COLUMN_FECHA));
            stock.setBodegaDescripcion(CursorUtils.getString(c, Contract.Stock.FIELD_BODEGA_DESCRIPCION));
            list.add(stock);
        }
        c.close();
        return list;
    }

    public static void deleteStockItem(DataBase db, String item)
    {
        db.delete(Contract.Stock.TABLE_NAME, Contract.Stock.COLUMN_ITEM + " = ?", item);
    }
}