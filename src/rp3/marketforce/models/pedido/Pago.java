package rp3.marketforce.models.pedido;

import android.database.Cursor;

import java.util.ArrayList;
import java.util.List;

import rp3.data.entity.EntityBase;
import rp3.db.QueryDir;
import rp3.db.sqlite.DataBase;
import rp3.marketforce.db.Contract;
import rp3.util.CursorUtils;

/**
 * Created by magno_000 on 16/12/2015.
 */
public class Pago extends EntityBase<Pago> {

    private long id;
    private int idPago;
    private int idFormaPago;
    private long _idPedido;
    private int idPedido;
    private String observacion;
    private float valor;

    private FormaPago formaPago;

    @Override
    public long getID() {
        return id;
    }

    @Override
    public void setID(long id) {
        this.id = id;
    }

    @Override
    public boolean isAutoGeneratedId() {
        return true;
    }

    @Override
    public String getTableName() {
        return Contract.Pago.TABLE_NAME;
    }


    public int getIdFormaPago() {
        return idFormaPago;
    }

    public void setIdFormaPago(int idFormaPago) {
        this.idFormaPago = idFormaPago;
    }

    public int getIdPago() {
        return idPago;
    }

    public void setIdPago(int idPago) {
        this.idPago = idPago;
    }

    public long get_idPedido() {
        return _idPedido;
    }

    public void set_idPedido(long _idPedido) {
        this._idPedido = _idPedido;
    }

    public int getIdPedido() {
        return idPedido;
    }

    public void setIdPedido(int idPedido) {
        this.idPedido = idPedido;
    }

    public String getObservacion() {
        return observacion;
    }

    public void setObservacion(String observacion) {
        this.observacion = observacion;
    }

    public float getValor() {
        return valor;
    }

    public void setValor(float valor) {
        this.valor = valor;
    }

    public FormaPago getFormaPago() {
        return formaPago;
    }

    public void setFormaPago(FormaPago formaPago) {
        this.formaPago = formaPago;
    }

    @Override
    public void setValues() {
        setValue(Contract.Pago.COLUMN_ID_FORMA_PAGO, this.idFormaPago);
        setValue(Contract.Pago.COLUMN_ID_PAGO, this.idPago);
        setValue(Contract.Pago.COLUMN_ID_PEDIDO, this.idPedido);
        setValue(Contract.Pago.COLUMN_ID_PEDIDO_INT, this._idPedido);
        setValue(Contract.Pago.COLUMN_OBSERVACION, this.observacion);
        setValue(Contract.Pago.COLUMN_VALOR, this.valor);
    }

    @Override
    public Object getValue(String key) {
        return null;
    }

    @Override
    public String getDescription() {
        return null;
    }

    public static List<Pago> getPagos(DataBase db, int idPedido) {
        Cursor c = db.query(Contract.Pago.TABLE_NAME, new String[]{Contract.Pago._ID, Contract.Pago.COLUMN_ID_FORMA_PAGO, Contract.Pago.COLUMN_ID_PAGO, Contract.Pago.COLUMN_ID_PEDIDO,
                Contract.Pago.COLUMN_ID_PEDIDO_INT, Contract.Pago.COLUMN_OBSERVACION, Contract.Pago.COLUMN_VALOR,}, Contract.Pago.COLUMN_ID_PEDIDO + " = ?", new String[]{idPedido + ""});

        List<Pago> list = new ArrayList<Pago>();
        while(c.moveToNext()){
            Pago pago = new Pago();
            pago.setID(CursorUtils.getInt(c, Contract.Pago._ID));
            pago.setIdFormaPago(CursorUtils.getInt(c, Contract.Pago.COLUMN_ID_FORMA_PAGO));
            pago.setIdPago(CursorUtils.getInt(c, Contract.Pago.COLUMN_ID_PAGO));
            pago.setIdPedido(CursorUtils.getInt(c, Contract.Pago.COLUMN_ID_PEDIDO));
            pago.set_idPedido(CursorUtils.getLong(c, Contract.Pago.COLUMN_ID_PEDIDO_INT));
            pago.setObservacion(CursorUtils.getString(c, Contract.Pago.COLUMN_OBSERVACION));
            pago.setValor(CursorUtils.getFloat(c, Contract.Pago.COLUMN_VALOR));
            pago.setFormaPago(FormaPago.getFormaPago(db, pago.getIdFormaPago()));
            list.add(pago);
        }
        c.close();
        return list;
    }

    public static List<Pago> getPagosInt(DataBase db, long idPedido) {
        Cursor c = db.query(Contract.Pago.TABLE_NAME, new String[]{Contract.Pago._ID, Contract.Pago.COLUMN_ID_FORMA_PAGO, Contract.Pago.COLUMN_ID_PAGO, Contract.Pago.COLUMN_ID_PEDIDO,
                Contract.Pago.COLUMN_ID_PEDIDO_INT, Contract.Pago.COLUMN_OBSERVACION, Contract.Pago.COLUMN_VALOR,}, Contract.Pago.COLUMN_ID_PEDIDO_INT + " = ?", new String[]{idPedido + ""});

        List<Pago> list = new ArrayList<Pago>();
        while(c.moveToNext()){
            Pago pago = new Pago();
            pago.setID(CursorUtils.getInt(c, Contract.Pago._ID));
            pago.setIdFormaPago(CursorUtils.getInt(c, Contract.Pago.COLUMN_ID_FORMA_PAGO));
            pago.setIdPago(CursorUtils.getInt(c, Contract.Pago.COLUMN_ID_PAGO));
            pago.setIdPedido(CursorUtils.getInt(c, Contract.Pago.COLUMN_ID_PEDIDO));
            pago.set_idPedido(CursorUtils.getLong(c, Contract.Pago.COLUMN_ID_PEDIDO_INT));
            pago.setObservacion(CursorUtils.getString(c, Contract.Pago.COLUMN_OBSERVACION));
            pago.setValor(CursorUtils.getFloat(c, Contract.Pago.COLUMN_VALOR));
            pago.setFormaPago(FormaPago.getFormaPago(db, pago.getIdFormaPago()));
            list.add(pago);
        }
        c.close();
        return list;
    }

    public static List<Pago> getArqueoCaja(DataBase db, long inicio, long fin) {
        Cursor c = db.rawQuery(QueryDir.getQuery(Contract.Pago.QUERY_ARQUEO), new String[] {inicio + "", fin + "", inicio + "", fin + ""});

        List<Pago> list = new ArrayList<Pago>();
        while(c.moveToNext()){
            Pago pago = new Pago();
            pago.setIdPago(CursorUtils.getInt(c, Contract.Pago._COUNT));
            pago.setIdFormaPago(CursorUtils.getInt(c, Contract.Pago.COLUMN_ID_FORMA_PAGO));
            pago.setValor(CursorUtils.getFloat(c, Contract.Pago.COLUMN_VALOR));
            if(pago.getIdFormaPago() != 0)
                pago.setFormaPago(FormaPago.getFormaPago(db, pago.getIdFormaPago()));
            list.add(pago);
        }
        c.close();
        return list;
    }

    public static void deletePagosByIdPedido(DataBase db, int idPedido)
    {
        db.delete(Contract.Pago.TABLE_NAME, Contract.Pago.COLUMN_ID_PEDIDO + " = ?", new String[]{idPedido + ""});
    }

    public static void deletePagosByIdPedidoInt(DataBase db, int idPedido)
    {
        db.delete(Contract.Pago.TABLE_NAME, Contract.Pago.COLUMN_ID_PEDIDO_INT + " = ?", new String[]{idPedido + ""});
    }

}