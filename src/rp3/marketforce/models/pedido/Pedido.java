package rp3.marketforce.models.pedido;

import android.database.Cursor;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import rp3.data.entity.EntityBase;
import rp3.db.sqlite.DataBase;
import rp3.marketforce.db.Contract;
import rp3.util.CursorUtils;

/**
 * Created by magno_000 on 12/10/2015.
 */
public class Pedido extends EntityBase<Pedido> {

    private long id;
    private int idPedido;
    private int idCliente;
    private int idAgenda;
    private double valorTotal;
    private String email;
    private String estado;
    private Date fechaCreacion;

    private List<PedidoDetalle> pedidoDetalles;

    @Override
    public long getID() {
        return id;
    }

    @Override
    public void setID(long id) {
        this.id = id;
    }

    @Override
    public boolean isAutoGeneratedId() {
        return true;
    }

    @Override
    public String getTableName() {
        return Contract.Pedido.TABLE_NAME;
    }

    public int getIdPedido() {
        return idPedido;
    }

    public void setIdPedido(int idPedido) {
        this.idPedido = idPedido;
    }

    public int getIdCliente() {
        return idCliente;
    }

    public void setIdCliente(int idCliente) {
        this.idCliente = idCliente;
    }

    public int getIdAgenda() {
        return idAgenda;
    }

    public void setIdAgenda(int idAgenda) {
        this.idAgenda = idAgenda;
    }

    public double getValorTotal() {
        return valorTotal;
    }

    public void setValorTotal(double valorTotal) {
        this.valorTotal = valorTotal;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getEstado() {
        return estado;
    }

    public void setEstado(String estado) {
        this.estado = estado;
    }

    public Date getFechaCreacion() {
        return fechaCreacion;
    }

    public void setFechaCreacion(Date fechaCreacion) {
        this.fechaCreacion = fechaCreacion;
    }

    public List<PedidoDetalle> getPedidoDetalles() {
        return pedidoDetalles;
    }

    public void setPedidoDetalles(List<PedidoDetalle> pedidoDetalles) {
        this.pedidoDetalles = pedidoDetalles;
    }

    @Override
    public void setValues() {
        setValue(Contract.Pedido.COLUMN_ID_PEDIDO, this.idPedido);
        setValue(Contract.Pedido.COLUMN_ID_AGENDA, this.idAgenda);
        setValue(Contract.Pedido.COLUMN_ID_CLIENTE, this.idCliente);
        setValue(Contract.Pedido.COLUMN_VALOR_TOTAL, this.valorTotal);
        setValue(Contract.Pedido.COLUMN_EMAIL, this.email);
        setValue(Contract.Pedido.COLUMN_ESTADO, this.estado);
        setValue(Contract.Pedido.COLUMN_FECHA_CREACION, this.fechaCreacion);
    }

    @Override
    public Object getValue(String key) {
        return null;
    }

    @Override
    public String getDescription() {
        return null;
    }

    public static List<Pedido> getPedidos(DataBase db) {
        Cursor c = db.query(Contract.Pedido.TABLE_NAME, new String[] {Contract.Pedido._ID, Contract.Pedido.COLUMN_ID_PEDIDO, Contract.Pedido.COLUMN_ID_AGENDA,
                Contract.Pedido.COLUMN_ID_CLIENTE, Contract.Pedido.COLUMN_VALOR_TOTAL, Contract.Pedido.COLUMN_EMAIL, Contract.Pedido.COLUMN_ESTADO,}
                ,null, null, null,null, Contract.Pedido.COLUMN_FECHA_CREACION);

        List<Pedido> list = new ArrayList<Pedido>();
        while(c.moveToNext()){
            Pedido pedido = new Pedido();
            pedido.setID(CursorUtils.getInt(c, Contract.Pedido._ID));
            pedido.setIdAgenda(CursorUtils.getInt(c, Contract.Pedido.COLUMN_ID_AGENDA));
            pedido.setIdCliente(CursorUtils.getInt(c, Contract.Pedido.COLUMN_ID_CLIENTE));
            pedido.setIdPedido(CursorUtils.getInt(c, Contract.Pedido.COLUMN_ID_PEDIDO));
            pedido.setValorTotal(CursorUtils.getDouble(c, Contract.Pedido.COLUMN_VALOR_TOTAL));
            pedido.setEmail(CursorUtils.getString(c, Contract.Pedido.COLUMN_EMAIL));
            pedido.setEstado(CursorUtils.getString(c, Contract.Pedido.COLUMN_ESTADO));
            pedido.setFechaCreacion(CursorUtils.getDate(c, Contract.Pedido.COLUMN_FECHA_CREACION));
            list.add(pedido);
        }
        c.close();
        return list;
    }

    public static Pedido getPedido(DataBase db, int id) {
        Cursor c = db.query(Contract.Pedido.TABLE_NAME, new String[] {Contract.Pedido._ID, Contract.Pedido.COLUMN_ID_PEDIDO, Contract.Pedido.COLUMN_ID_AGENDA,
                Contract.Pedido.COLUMN_ID_CLIENTE, Contract.Pedido.COLUMN_VALOR_TOTAL, Contract.Pedido.COLUMN_EMAIL, Contract.Pedido.COLUMN_ESTADO,}
                ,Contract.Pedido._ID + " = ? ", new String[]{id + ""}, null,null, Contract.Pedido.COLUMN_FECHA_CREACION);

        Pedido pedido = new Pedido();
        while(c.moveToNext()){

            pedido.setID(CursorUtils.getInt(c, Contract.Pedido._ID));
            pedido.setIdAgenda(CursorUtils.getInt(c, Contract.Pedido.COLUMN_ID_AGENDA));
            pedido.setIdCliente(CursorUtils.getInt(c, Contract.Pedido.COLUMN_ID_CLIENTE));
            pedido.setIdPedido(CursorUtils.getInt(c, Contract.Pedido.COLUMN_ID_PEDIDO));
            pedido.setValorTotal(CursorUtils.getDouble(c, Contract.Pedido.COLUMN_VALOR_TOTAL));
            pedido.setEmail(CursorUtils.getString(c, Contract.Pedido.COLUMN_EMAIL));
            pedido.setEstado(CursorUtils.getString(c, Contract.Pedido.COLUMN_ESTADO));
            pedido.setFechaCreacion(CursorUtils.getDate(c, Contract.Pedido.COLUMN_FECHA_CREACION));
            pedido.setPedidoDetalles(PedidoDetalle.getPedidoDetalles(db, pedido.getIdPedido()));
            if(pedido.getPedidoDetalles().size() < 0)
                pedido.setPedidoDetalles(PedidoDetalle.getPedidoDetallesInt(db, pedido.getID()));
        }
        c.close();
        return pedido;
    }
}