package rp3.marketforce.models;

import android.database.Cursor;
import android.os.Parcelable;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import rp3.db.QueryDir;
import rp3.db.sqlite.DataBase;
import rp3.marketforce.db.Contract;
import rp3.util.CursorUtils;

/**
 * Created by magno_000 on 27/03/2015.
 */
public class AgenteUbicacion extends rp3.data.entity.EntityBase<AgenteResumen> {

    private long id;
    private int idAgente;
    private String nombres;
    private String apellidos;
    private Date fecha;
    private double latitud;
    private double longitud;
    private boolean show;

    public double getLatitud() {
        return latitud;
    }

    public void setLatitud(double latitud) {
        this.latitud = latitud;
    }

    public double getLongitud() {
        return longitud;
    }

    public void setLongitud(double longitud) {
        this.longitud = longitud;
    }

    public boolean isShow() {
        return show;
    }

    public void setShow(boolean show) {
        this.show = show;
    }

    @Override
    public long getID() {
        // TODO Auto-generated method stub
        return id;
    }

    @Override
    public void setID(long id) {
        this.id = id;

    }

    public int getIdAgente() {
        return idAgente;
    }

    public void setIdAgente(int idAgente) {
        this.idAgente = idAgente;
    }

    @Override
    public boolean isAutoGeneratedId() {
        // TODO Auto-generated method stub
        return true;
    }

    @Override
    public String getTableName() {
        // TODO Auto-generated method stub
        return Contract.AgentesUbicacion.TABLE_NAME;
    }

    @Override
    public void setValues() {
        setValue(Contract.AgentesUbicacion.COLUMN_ID_AGENTE, this.idAgente);
        setValue(Contract.AgentesUbicacion.COLUMN_NOMBRES, this.nombres);
        setValue(Contract.AgentesUbicacion.COLUMN_APELLIDOS, this.apellidos);
        setValue(Contract.AgentesUbicacion.COLUMN_FECHA, this.fecha);
        setValue(Contract.AgentesUbicacion.COLUMN_LATITUD, this.latitud);
        setValue(Contract.AgentesUbicacion.COLUMN_LONGITUD, this.longitud);

    }

    @Override
    public Object getValue(String key) {
        // TODO Auto-generated method stub
        return null;
    }

    @Override
    public String getDescription() {
        // TODO Auto-generated method stub
        return null;
    }

    public Date getFecha() {
        return fecha;
    }

    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }

    public String getApellidos() {
        return apellidos;
    }

    public void setApellidos(String apellidos) {
        this.apellidos = apellidos;
    }

    public String getNombres() {
        return nombres;
    }

    public void setNombres(String nombres) {
        this.nombres = nombres;
    }

    public static List<AgenteUbicacion> getResumen(DataBase db){
        Cursor c = db.query(Contract.AgentesUbicacion.TABLE_NAME, new String[]{ Contract.AgentesUbicacion.COLUMN_ID_AGENTE, Contract.AgentesUbicacion.COLUMN_NOMBRES,
        Contract.AgentesUbicacion.COLUMN_APELLIDOS, Contract.AgentesUbicacion.COLUMN_LATITUD, Contract.AgentesUbicacion.COLUMN_LONGITUD, Contract.AgentesUbicacion.COLUMN_FECHA});

        List<AgenteUbicacion> list = new ArrayList<AgenteUbicacion>();
        if(c.moveToFirst())
        {
            do
            {
                AgenteUbicacion agd = new AgenteUbicacion();
                agd.setIdAgente(CursorUtils.getInt(c, Contract.AgentesUbicacion.FIELD_ID_AGENTE));
                agd.setNombres(CursorUtils.getString(c, Contract.AgentesUbicacion.FIELD_NOMBRES));
                agd.setApellidos(CursorUtils.getString(c, Contract.AgentesUbicacion.FIELD_APELLIDOS));
                agd.setFecha(CursorUtils.getDate(c, Contract.AgentesUbicacion.FIELD_FECHA));
                agd.setLatitud(CursorUtils.getDouble(c, Contract.AgentesUbicacion.FIELD_LATITUD));
                agd.setLongitud(CursorUtils.getDouble(c, Contract.AgentesUbicacion.FIELD_LONGITUD));
                agd.setShow(true);
                list.add(agd);
            }while(c.moveToNext());
        }
        c.close();
        return list;
    }

}
