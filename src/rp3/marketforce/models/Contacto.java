package rp3.marketforce.models;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import android.database.Cursor;

import rp3.data.entity.EntityBase;
import rp3.db.QueryDir;
import rp3.db.sqlite.DataBase;
import rp3.marketforce.db.Contract;
import rp3.marketforce.models.Cliente.ClientExt;
import rp3.util.CursorUtils;

public class Contacto extends rp3.data.entity.EntityBase<Contacto>{

	private long id;
	private long idContacto;
	private long idCliente;
	private long idClienteDireccion;
	private String nombre;
	private String apellido;
	private String telefono1;
	private String telefono2;
	private String correo;
	private String cargo;
	private String URLFoto;
	
	@Override
	public long getID() {
		// TODO Auto-generated method stub
		return this.id;
	}
	@Override
	public void setID(long id) {
		this.id = id;
		
	}
	@Override
	public boolean isAutoGeneratedId() {
		// TODO Auto-generated method stub
		return true;
	}
	@Override
	public String getTableName() {
		// TODO Auto-generated method stub
		return Contract.Contacto.TABLE_NAME;
	}
	@Override
	public void setValues() {				
		setValue(Contract.Contacto.COLUMN_ID_CONTACTO, this.idContacto);
		setValue(Contract.Contacto.COLUMN_ID_CLIENTE, this.idCliente);
		setValue(Contract.Contacto.COLUMN_ID_CLIENTE_DIRECCION, this.idClienteDireccion);							
		setValue(Contract.Contacto.COLUMN_URL_FOTO, this.URLFoto);	
	}
	@Override
	public Object getValue(String key) {
		// TODO Auto-generated method stub
		return null;
	}
	@Override
	public String getDescription() {
		// TODO Auto-generated method stub
		return null;
	}
	public long getId() {
		return id;
	}
	public void setId(long id) {
		this.id = id;
	}
	public long getIdCliente() {
		return idCliente;
	}
	public void setIdCliente(long idCliente) {
		this.idCliente = idCliente;
	}
	public long getIdClienteDireccion() {
		return idClienteDireccion;
	}
	public void setIdClienteDireccion(long idClienteDireccion) {
		this.idClienteDireccion = idClienteDireccion;
	}
	public String getNombre() {
		return nombre;
	}
	public void setNombre(String nombre) {
		this.nombre = nombre;
	}
	public String getApellido() {
		return apellido;
	}
	public void setApellido(String apellido) {
		this.apellido = apellido;
	}
	public String getTelefono1() {
		return telefono1;
	}
	public void setTelefono1(String telefono1) {
		this.telefono1 = telefono1;
	}
	public String getTelefono2() {
		return telefono2;
	}
	public void setTelefono2(String telefono2) {
		this.telefono2 = telefono2;
	}
	public String getCorreo() {
		return correo;
	}
	public void setCorreo(String correo) {
		this.correo = correo;
	}
	public String getCargo() {
		return cargo;
	}
	public void setCargo(String cargo) {
		this.cargo = cargo;
	}
	public String getURLFoto() {
		return URLFoto;
	}
	public void setURLFoto(String uRLFoto) {
		URLFoto = uRLFoto;
	}
	public long getIdContacto() {
		return idContacto;
	}
	public void setIdContacto(long idContacto) {
		this.idContacto = idContacto;
	}
	
	@Override
	protected boolean insertDb(DataBase db) {
		boolean result = super.insertDb(db);
		if(result)
		{
			ContactoExt ext = new ContactoExt();
			return ContactoExt.insert(db, ext);
		}
		return false;
	};
	
	public static void deleteContactoIdCliente(DataBase db, long id)
    {
    	db.delete(Contract.Contacto.TABLE_NAME, Contract.Contacto.COLUMN_ID_CLIENTE + " = ?", id);
    }
	
	public static List<Contacto> getContactoIdCliente(DataBase db, long idCliente)
	{
		List<Contacto> listaContactos = new ArrayList<Contacto>();
		String query = QueryDir.getQuery(Contract.Contacto.QUERY_CONTACTOS);
		Cursor s = db.rawQuery(query, idCliente);
		if(s.moveToFirst())
		{
			do
			{
				Contacto setter = new Contacto();
				setter.setApellido(CursorUtils.getString(s, Contract.Contacto.FIELD_APELLIDO));
				setter.setNombre(CursorUtils.getString(s, Contract.Contacto.FIELD_NOMBRE));
				setter.setIdCliente(CursorUtils.getLong(s, Contract.Contacto.FIELD_ID_CLIENTE));
				setter.setIdClienteDireccion(CursorUtils.getLong(s, Contract.Contacto.FIELD_ID_CLIENTE_DIRECCION));
				setter.setIdContacto(CursorUtils.getLong(s, Contract.Contacto.FIELD_ID_CONTACTO));
				setter.setCargo(CursorUtils.getString(s, Contract.Contacto.FIELD_CARGO));
				setter.setCorreo(CursorUtils.getString(s, Contract.Contacto.FIELD_CORREO));
				setter.setTelefono1(CursorUtils.getString(s, Contract.Contacto.FIELD_TELEFONO1));
				setter.setTelefono2(CursorUtils.getString(s, Contract.Contacto.FIELD_TELEFONO2));
				setter.setURLFoto(CursorUtils.getString(s, Contract.Contacto.FIELD_URL_FOTO));
				listaContactos.add(setter);
			}
			while(s.moveToNext());
		}
		s.close();
		return listaContactos;
	}
	
	public static Contacto getContactoId(DataBase db, long idContacto)
	{
		String query = QueryDir.getQuery(Contract.Contacto.QUERY_CONTACTOS_ID);
		Cursor s = db.rawQuery(query, idContacto);
		Contacto setter = new Contacto();
		if(s.moveToFirst())
		{
				setter.setApellido(CursorUtils.getString(s, Contract.Contacto.FIELD_APELLIDO));
				setter.setNombre(CursorUtils.getString(s, Contract.Contacto.FIELD_NOMBRE));
				setter.setIdCliente(CursorUtils.getLong(s, Contract.Contacto.FIELD_ID_CLIENTE));
				setter.setIdClienteDireccion(CursorUtils.getLong(s, Contract.Contacto.FIELD_ID_CLIENTE_DIRECCION));
				setter.setIdContacto(CursorUtils.getLong(s, Contract.Contacto.FIELD_ID_CONTACTO));
				setter.setCargo(CursorUtils.getString(s, Contract.Contacto.FIELD_CARGO));
				setter.setCorreo(CursorUtils.getString(s, Contract.Contacto.FIELD_CORREO));
				setter.setTelefono1(CursorUtils.getString(s, Contract.Contacto.FIELD_TELEFONO1));
				setter.setTelefono2(CursorUtils.getString(s, Contract.Contacto.FIELD_TELEFONO2));
				setter.setURLFoto(CursorUtils.getString(s, Contract.Contacto.FIELD_URL_FOTO));

		}
		s.close();
		return setter;
	}
	
	public class ContactoExt extends EntityBase<ClientExt>{

		@Override
		public long getID() {
			// TODO Auto-generated method stub
			return id;
		}

		@Override
		public void setID(long idtext) {
			id = idtext;
			
		}

		@Override
		public boolean isAutoGeneratedId() {
			// TODO Auto-generated method stub
			return false;
		}

		@Override
		public String getTableName() {
			// TODO Auto-generated method stub
			return Contract.ContactoExt.TABLE_NAME;
		}

		@Override
		public void setValues() {
			setValue(Contract.ContactoExt.COLUMN_ID, id);
			setValue(Contract.ContactoExt.COLUMN_NOMBRE, nombre);						
			setValue(Contract.ContactoExt.COLUMN_APELLIDO, apellido);
			setValue(Contract.ContactoExt.COLUMN_CARGO, cargo);
			setValue(Contract.ContactoExt.COLUMN_CORREO, correo);	
			setValue(Contract.ContactoExt.COLUMN_TELEFONO1, telefono1);		
			setValue(Contract.ContactoExt.COLUMN_TELEFONO2, telefono2);
		}

		@Override
		public Object getValue(String key) {
			// TODO Auto-generated method stub
			return null;
		}

		@Override
		public String getDescription() {
			// TODO Auto-generated method stub
			return null;
		}
		
			
		
	}

}
