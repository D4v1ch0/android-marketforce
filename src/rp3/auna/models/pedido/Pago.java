package rp3.auna.models.pedido;

import android.database.Cursor;

import java.util.ArrayList;
import java.util.List;

import rp3.data.entity.EntityBase;
import rp3.db.QueryDir;
import rp3.db.sqlite.DataBase;
import rp3.auna.db.Contract;
import rp3.util.CursorUtils;

/**
 * Created by magno_000 on 16/12/2015.
 */
public class Pago extends EntityBase<Pago> {

    private long id;
    private int idPago;
    private int idFormaPago;
    private long _idPedido;
    private int idPedido;
    private String observacion;
    private float valor;
    private int idBanco;
    private int idMarcaTarjeta;
    private String numeroCuenta;
    private String numeroDocumento;
    private int autorizadorTarjeta;
    private int idTipoDiferido;
    private int codigoSeguridad;

    private FormaPago formaPago;
    private String bancoDescripcion;
    private String marcaTarjetaDescripcion;

    @Override
    public long getID() {
        return id;
    }

    @Override
    public void setID(long id) {
        this.id = id;
    }

    @Override
    public boolean isAutoGeneratedId() {
        return true;
    }

    @Override
    public String getTableName() {
        return Contract.Pago.TABLE_NAME;
    }


    public int getIdFormaPago() {
        return idFormaPago;
    }

    public void setIdFormaPago(int idFormaPago) {
        this.idFormaPago = idFormaPago;
    }

    public int getIdPago() {
        return idPago;
    }

    public void setIdPago(int idPago) {
        this.idPago = idPago;
    }

    public long get_idPedido() {
        return _idPedido;
    }

    public void set_idPedido(long _idPedido) {
        this._idPedido = _idPedido;
    }

    public int getIdPedido() {
        return idPedido;
    }

    public void setIdPedido(int idPedido) {
        this.idPedido = idPedido;
    }

    public String getObservacion() {
        return observacion;
    }

    public void setObservacion(String observacion) {
        this.observacion = observacion;
    }

    public float getValor() {
        return valor;
    }

    public void setValor(float valor) {
        this.valor = valor;
    }

    public FormaPago getFormaPago() {
        return formaPago;
    }

    public void setFormaPago(FormaPago formaPago) {
        this.formaPago = formaPago;
    }

    public int getIdBanco() {
        return idBanco;
    }

    public void setIdBanco(int idBanco) {
        this.idBanco = idBanco;
    }

    public int getIdMarcaTarjeta() {
        return idMarcaTarjeta;
    }

    public void setIdMarcaTarjeta(int idMarcaTarjeta) {
        this.idMarcaTarjeta = idMarcaTarjeta;
    }

    public String getNumeroCuenta() {
        return numeroCuenta;
    }

    public void setNumeroCuenta(String numeroCuenta) {
        this.numeroCuenta = numeroCuenta;
    }

    public String getNumeroDocumento() {
        return numeroDocumento;
    }

    public void setNumeroDocumento(String numeroDocumento) {
        this.numeroDocumento = numeroDocumento;
    }

    public int getAutorizadorTarjeta() {
        return autorizadorTarjeta;
    }

    public void setAutorizadorTarjeta(int autorizadorTarjeta) {
        this.autorizadorTarjeta = autorizadorTarjeta;
    }

    public int getIdTipoDiferido() {
        return idTipoDiferido;
    }

    public void setIdTipoDiferido(int idTipoDiferido) {
        this.idTipoDiferido = idTipoDiferido;
    }

    public int getCodigoSeguridad() {
        return codigoSeguridad;
    }

    public void setCodigoSeguridad(int codigoSeguridad) {
        this.codigoSeguridad = codigoSeguridad;
    }

    public String getBancoDescripcion() {
        return bancoDescripcion;
    }

    public void setBancoDescripcion(String bancoDescripcion) {
        this.bancoDescripcion = bancoDescripcion;
    }

    public String getMarcaTarjetaDescripcion() {
        return marcaTarjetaDescripcion;
    }

    public void setMarcaTarjetaDescripcion(String marcaTarjetaDescripcion) {
        this.marcaTarjetaDescripcion = marcaTarjetaDescripcion;
    }

    @Override
    public void setValues() {
        setValue(Contract.Pago.COLUMN_ID_FORMA_PAGO, this.idFormaPago);
        setValue(Contract.Pago.COLUMN_ID_PAGO, this.idPago);
        setValue(Contract.Pago.COLUMN_ID_PEDIDO, this.idPedido);
        setValue(Contract.Pago.COLUMN_ID_PEDIDO_INT, this._idPedido);
        setValue(Contract.Pago.COLUMN_OBSERVACION, this.observacion);
        setValue(Contract.Pago.COLUMN_VALOR, this.valor);
        setValue(Contract.Pago.COLUMN_ID_BANCO, this.idBanco);
        setValue(Contract.Pago.COLUMN_ID_MARCA_TARJETA, this.idMarcaTarjeta);
        setValue(Contract.Pago.COLUMN_NUMERO_CUENTA, this.numeroCuenta);
        setValue(Contract.Pago.COLUMN_NUMERO_DOCUMENTO, this.numeroDocumento);
        setValue(Contract.Pago.COLUMN_ID_TIPO_DIFERIDO, this.idTipoDiferido);
        setValue(Contract.Pago.COLUMN_AUTORIZADOR_TARJETA, this.autorizadorTarjeta);
        setValue(Contract.Pago.COLUMN_CODIGO_SEGURIDAD, this.codigoSeguridad);
    }

    @Override
    public Object getValue(String key) {
        return null;
    }

    @Override
    public String getDescription() {
        return null;
    }

    public static List<Pago> getPagos(DataBase db, int idPedido) {
        Cursor c = db.query(Contract.Pago.TABLE_NAME, new String[]{Contract.Pago._ID, Contract.Pago.COLUMN_ID_FORMA_PAGO, Contract.Pago.COLUMN_ID_PAGO, Contract.Pago.COLUMN_ID_PEDIDO,
                Contract.Pago.COLUMN_ID_PEDIDO_INT, Contract.Pago.COLUMN_OBSERVACION, Contract.Pago.COLUMN_VALOR, Contract.Pago.COLUMN_ID_BANCO, Contract.Pago.COLUMN_ID_MARCA_TARJETA, Contract.Pago.COLUMN_NUMERO_CUENTA,
                Contract.Pago.COLUMN_NUMERO_DOCUMENTO, Contract.Pago.COLUMN_AUTORIZADOR_TARJETA, Contract.Pago.COLUMN_ID_TIPO_DIFERIDO, Contract.Pago.COLUMN_CODIGO_SEGURIDAD}, Contract.Pago.COLUMN_ID_PEDIDO + " = ?", new String[]{idPedido + ""});

        List<Pago> list = new ArrayList<Pago>();
        while(c.moveToNext()){
            Pago pago = new Pago();
            pago.setID(CursorUtils.getInt(c, Contract.Pago._ID));
            pago.setIdFormaPago(CursorUtils.getInt(c, Contract.Pago.COLUMN_ID_FORMA_PAGO));
            pago.setIdPago(CursorUtils.getInt(c, Contract.Pago.COLUMN_ID_PAGO));
            pago.setIdPedido(CursorUtils.getInt(c, Contract.Pago.COLUMN_ID_PEDIDO));
            pago.set_idPedido(CursorUtils.getLong(c, Contract.Pago.COLUMN_ID_PEDIDO_INT));
            pago.setObservacion(CursorUtils.getString(c, Contract.Pago.COLUMN_OBSERVACION));
            pago.setValor(CursorUtils.getFloat(c, Contract.Pago.COLUMN_VALOR));
            pago.setIdBanco(CursorUtils.getInt(c, Contract.Pago.COLUMN_ID_BANCO));
            pago.setIdMarcaTarjeta(CursorUtils.getInt(c, Contract.Pago.COLUMN_ID_MARCA_TARJETA));
            pago.setIdTipoDiferido(CursorUtils.getInt(c, Contract.Pago.COLUMN_ID_TIPO_DIFERIDO));
            pago.setNumeroDocumento(CursorUtils.getString(c, Contract.Pago.COLUMN_NUMERO_DOCUMENTO));
            pago.setNumeroCuenta(CursorUtils.getString(c, Contract.Pago.COLUMN_NUMERO_CUENTA));
            pago.setAutorizadorTarjeta(CursorUtils.getInt(c, Contract.Pago.COLUMN_AUTORIZADOR_TARJETA));
            pago.setCodigoSeguridad(CursorUtils.getInt(c, Contract.Pago.COLUMN_CODIGO_SEGURIDAD));
            pago.setFormaPago(FormaPago.getFormaPago(db, pago.getIdFormaPago()));
            list.add(pago);
        }
        c.close();
        return list;
    }

    public static Pago getPagoNC(DataBase db, String numeroDocumento) {
        Cursor c = db.query(Contract.Pago.TABLE_NAME, new String[]{Contract.Pago._ID, Contract.Pago.COLUMN_ID_FORMA_PAGO, Contract.Pago.COLUMN_ID_PAGO, Contract.Pago.COLUMN_ID_PEDIDO,
                Contract.Pago.COLUMN_ID_PEDIDO_INT, Contract.Pago.COLUMN_OBSERVACION, Contract.Pago.COLUMN_VALOR,  Contract.Pago.COLUMN_ID_BANCO, Contract.Pago.COLUMN_ID_MARCA_TARJETA, Contract.Pago.COLUMN_NUMERO_CUENTA,
                Contract.Pago.COLUMN_NUMERO_DOCUMENTO, Contract.Pago.COLUMN_AUTORIZADOR_TARJETA, Contract.Pago.COLUMN_ID_TIPO_DIFERIDO, Contract.Pago.COLUMN_CODIGO_SEGURIDAD}, Contract.Pago.COLUMN_NUMERO_DOCUMENTO + " = ?", new String[]{numeroDocumento});

        Pago pago = null;
        while(c.moveToNext()){
            pago = new Pago();
            pago.setID(CursorUtils.getInt(c, Contract.Pago._ID));
            pago.setIdFormaPago(CursorUtils.getInt(c, Contract.Pago.COLUMN_ID_FORMA_PAGO));
            pago.setIdPago(CursorUtils.getInt(c, Contract.Pago.COLUMN_ID_PAGO));
            pago.setIdPedido(CursorUtils.getInt(c, Contract.Pago.COLUMN_ID_PEDIDO));
            pago.set_idPedido(CursorUtils.getLong(c, Contract.Pago.COLUMN_ID_PEDIDO_INT));
            pago.setObservacion(CursorUtils.getString(c, Contract.Pago.COLUMN_OBSERVACION));
            pago.setValor(CursorUtils.getFloat(c, Contract.Pago.COLUMN_VALOR));
            pago.setIdBanco(CursorUtils.getInt(c, Contract.Pago.COLUMN_ID_BANCO));
            pago.setIdMarcaTarjeta(CursorUtils.getInt(c, Contract.Pago.COLUMN_ID_MARCA_TARJETA));
            pago.setIdTipoDiferido(CursorUtils.getInt(c, Contract.Pago.COLUMN_ID_TIPO_DIFERIDO));
            pago.setNumeroDocumento(CursorUtils.getString(c, Contract.Pago.COLUMN_NUMERO_DOCUMENTO));
            pago.setNumeroCuenta(CursorUtils.getString(c, Contract.Pago.COLUMN_NUMERO_CUENTA));
            pago.setAutorizadorTarjeta(CursorUtils.getInt(c, Contract.Pago.COLUMN_AUTORIZADOR_TARJETA));
            pago.setCodigoSeguridad(CursorUtils.getInt(c, Contract.Pago.COLUMN_CODIGO_SEGURIDAD));
            pago.setFormaPago(FormaPago.getFormaPago(db, pago.getIdFormaPago()));
        }
        c.close();
        return pago;
    }

    public static List<Pago> getPagosInt(DataBase db, long idPedido) {
        Cursor c = db.query(Contract.Pago.TABLE_NAME, new String[]{Contract.Pago._ID, Contract.Pago.COLUMN_ID_FORMA_PAGO, Contract.Pago.COLUMN_ID_PAGO, Contract.Pago.COLUMN_ID_PEDIDO,
                Contract.Pago.COLUMN_ID_PEDIDO_INT, Contract.Pago.COLUMN_OBSERVACION, Contract.Pago.COLUMN_VALOR, Contract.Pago.COLUMN_ID_BANCO, Contract.Pago.COLUMN_ID_MARCA_TARJETA, Contract.Pago.COLUMN_NUMERO_CUENTA,
                Contract.Pago.COLUMN_NUMERO_DOCUMENTO, Contract.Pago.COLUMN_AUTORIZADOR_TARJETA, Contract.Pago.COLUMN_ID_TIPO_DIFERIDO, Contract.Pago.COLUMN_CODIGO_SEGURIDAD}, Contract.Pago.COLUMN_ID_PEDIDO_INT + " = ?", new String[]{idPedido + ""});

        List<Pago> list = new ArrayList<Pago>();
        while(c.moveToNext()){
            Pago pago = new Pago();
            pago.setID(CursorUtils.getInt(c, Contract.Pago._ID));
            pago.setIdFormaPago(CursorUtils.getInt(c, Contract.Pago.COLUMN_ID_FORMA_PAGO));
            pago.setIdPago(CursorUtils.getInt(c, Contract.Pago.COLUMN_ID_PAGO));
            pago.setIdPedido(CursorUtils.getInt(c, Contract.Pago.COLUMN_ID_PEDIDO));
            pago.set_idPedido(CursorUtils.getLong(c, Contract.Pago.COLUMN_ID_PEDIDO_INT));
            pago.setObservacion(CursorUtils.getString(c, Contract.Pago.COLUMN_OBSERVACION));
            pago.setValor(CursorUtils.getFloat(c, Contract.Pago.COLUMN_VALOR));
            pago.setIdBanco(CursorUtils.getInt(c, Contract.Pago.COLUMN_ID_BANCO));
            pago.setIdMarcaTarjeta(CursorUtils.getInt(c, Contract.Pago.COLUMN_ID_MARCA_TARJETA));
            pago.setIdTipoDiferido(CursorUtils.getInt(c, Contract.Pago.COLUMN_ID_TIPO_DIFERIDO));
            pago.setNumeroDocumento(CursorUtils.getString(c, Contract.Pago.COLUMN_NUMERO_DOCUMENTO));
            pago.setNumeroCuenta(CursorUtils.getString(c, Contract.Pago.COLUMN_NUMERO_CUENTA));
            pago.setAutorizadorTarjeta(CursorUtils.getInt(c, Contract.Pago.COLUMN_AUTORIZADOR_TARJETA));
            pago.setCodigoSeguridad(CursorUtils.getInt(c, Contract.Pago.COLUMN_CODIGO_SEGURIDAD));
            pago.setFormaPago(FormaPago.getFormaPago(db, pago.getIdFormaPago()));
            list.add(pago);
        }
        c.close();
        return list;
    }

    public static List<Pago> getArqueoCaja(DataBase db, long idControlCaja, boolean withFilter) {
        Cursor c = db.rawQuery(QueryDir.getQuery(Contract.Pago.QUERY_ARQUEO), new String[] {idControlCaja + "", idControlCaja + "", idControlCaja + "", idControlCaja + "", idControlCaja + "", idControlCaja + "", idControlCaja + ""});

        List<Pago> list = new ArrayList<Pago>();
        while(c.moveToNext()){
            Pago pago = new Pago();
            pago.setIdPago(CursorUtils.getInt(c, Contract.Pago._COUNT));
            pago.setIdFormaPago(CursorUtils.getInt(c, Contract.Pago.COLUMN_ID_FORMA_PAGO));
            pago.setValor(CursorUtils.getFloat(c, Contract.Pago.COLUMN_VALOR));
            if(pago.getIdFormaPago() < -1 && !withFilter)
                continue;
            if(pago.getIdFormaPago() > 0)
                pago.setFormaPago(FormaPago.getFormaPago(db, pago.getIdFormaPago()));
            pago.setBancoDescripcion(CursorUtils.getString(c, "Banco"));
            pago.setMarcaTarjetaDescripcion(CursorUtils.getString(c, "MarcaTarjeta"));
            list.add(pago);
        }
        c.close();
        return list;
    }

    public static void deletePagosByIdPedido(DataBase db, int idPedido)
    {
        db.delete(Contract.Pago.TABLE_NAME, Contract.Pago.COLUMN_ID_PEDIDO + " = ?", new String[]{idPedido + ""});
    }

    public static void deletePagosByIdPedidoInt(DataBase db, int idPedido)
    {
        db.delete(Contract.Pago.TABLE_NAME, Contract.Pago.COLUMN_ID_PEDIDO_INT + " = ?", new String[]{idPedido + ""});
    }

}