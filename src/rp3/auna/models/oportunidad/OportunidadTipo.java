package rp3.auna.models.oportunidad;

import android.database.Cursor;

import java.util.ArrayList;
import java.util.List;

import rp3.data.entity.EntityBase;
import rp3.db.sqlite.DataBase;
import rp3.auna.db.Contract;
import rp3.util.CursorUtils;

/**
 * Created by magno_000 on 23/09/2015.
 */
public class OportunidadTipo extends EntityBase<OportunidadTipo> {

    private long id;
    private int idOportunidadTipo;
    private String descripcion;

    @Override
    public long getID() {
        return id;
    }

    @Override
    public void setID(long id) {
        this.id = id;
    }

    public int getIdOportunidadTipo() {
        return idOportunidadTipo;
    }

    public void setIdOportunidadTipo(int idOportunidadTipo) {
        this.idOportunidadTipo = idOportunidadTipo;
    }

    public String getDescripcion() {
        return descripcion;
    }

    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

    @Override
    public boolean isAutoGeneratedId() {
        return true;
    }

    @Override
    public String getTableName() {
        return Contract.OportunidadTipo.TABLE_NAME;
    }

    @Override
    public void setValues() {
        setValue(Contract.OportunidadTipo.COLUMN_ID_OPORTUNIDAD_TIPO, this.idOportunidadTipo);
        setValue(Contract.OportunidadTipo.COLUMN_DESCRIPCION, this.descripcion);
    }

    @Override
    public Object getValue(String key) {
        return null;
    }

    @Override
    public String getDescription() {
        return null;
    }

    public static List<OportunidadTipo> getOportunidadTipoAll(DataBase db){

        Cursor c = db.query(Contract.OportunidadTipo.TABLE_NAME, new String[] {Contract.OportunidadTipo._ID, Contract.OportunidadTipo.COLUMN_ID_OPORTUNIDAD_TIPO, Contract.OportunidadTipo.COLUMN_DESCRIPCION});

        List<OportunidadTipo> list = new ArrayList<OportunidadTipo>();
        while(c.moveToNext()){
            OportunidadTipo etp = new OportunidadTipo();
            etp.setID(CursorUtils.getInt(c, Contract.OportunidadTipo._ID));
            etp.setIdOportunidadTipo(CursorUtils.getInt(c, Contract.OportunidadTipo.COLUMN_ID_OPORTUNIDAD_TIPO));
            etp.setDescripcion(CursorUtils.getString(c, Contract.OportunidadTipo.COLUMN_DESCRIPCION));
            list.add(etp);
        }
        c.close();
        return list;
    }

    public static OportunidadTipo getTipoOportunidad(DataBase db, int idOportunidadTipo) {
        Cursor c = db.query(Contract.OportunidadTipo.TABLE_NAME, new String[] {Contract.OportunidadTipo._ID, Contract.OportunidadTipo.COLUMN_ID_OPORTUNIDAD_TIPO, Contract.OportunidadTipo.COLUMN_DESCRIPCION},
                Contract.OportunidadTipo.COLUMN_ID_OPORTUNIDAD_TIPO + " = ?", new String[] {idOportunidadTipo + ""});

        OportunidadTipo etp = new OportunidadTipo();
        while(c.moveToNext()){

            etp.setID(CursorUtils.getInt(c, Contract.OportunidadTipo._ID));
            etp.setIdOportunidadTipo(CursorUtils.getInt(c, Contract.OportunidadTipo.COLUMN_ID_OPORTUNIDAD_TIPO));
            etp.setDescripcion(CursorUtils.getString(c, Contract.OportunidadTipo.COLUMN_DESCRIPCION));
        }
        c.close();
        return etp;
    }
}
