package rp3.auna.models.oportunidad;

import android.database.Cursor;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import rp3.data.entity.EntityBase;
import rp3.db.sqlite.DataBase;
import rp3.auna.db.Contract;
import rp3.util.CursorUtils;

/**
 * Created by magno_000 on 27/05/2015.
 */
public class OportunidadEtapa extends EntityBase<OportunidadEtapa> {

    private long id;
    private int idOportunidad;
    private int _idOportunidad;
    private int idEtapa;
    private int idEtapaPadre;
    private Date fechaInicio;
    private Date fechaFin;
    private String observacion;
    private String estado;
    private Etapa etapa;
    private List<OportunidadTarea> oportunidadTareas;
    private Date fechaFinPlan;

    @Override
    public long getID() {
        return id;
    }

    @Override
    public void setID(long id) {
        this.id = id;
    }

    public int getIdOportunidad() {
        return idOportunidad;
    }

    public void setIdOportunidad(int idOportunidad) {
        this.idOportunidad = idOportunidad;
    }

    public int get_idOportunidad() {
        return _idOportunidad;
    }

    public void set_idOportunidad(int _idOportunidad) {
        this._idOportunidad = _idOportunidad;
    }

    public int getIdEtapa() {
        return idEtapa;
    }

    public void setIdEtapa(int idEtapa) {
        this.idEtapa = idEtapa;
    }

    public Date getFechaInicio() {
        return fechaInicio;
    }

    public void setFechaInicio(Date fechaInicio) {
        this.fechaInicio = fechaInicio;
    }

    public Date getFechaFin() {
        return fechaFin;
    }

    public void setFechaFin(Date fechaFin) {
        this.fechaFin = fechaFin;
    }

    public Etapa getEtapa() {
        return etapa;
    }

    public void setEtapa(Etapa etapa) {
        this.etapa = etapa;
    }

    public String getObservacion() {
        return observacion;
    }

    public void setObservacion(String observacion) {
        this.observacion = observacion;
    }

    public Date getFechaFinPlan() {
        return fechaFinPlan;
    }

    public void setFechaFinPlan(Date fechaFinPlan) {
        this.fechaFinPlan = fechaFinPlan;
    }

    public String getEstado() {
        return estado;
    }

    public void setEstado(String estado) {
        this.estado = estado;
    }

    public List<OportunidadTarea> getOportunidadTareas() {
        return oportunidadTareas;
    }

    public void setOportunidadTareas(List<OportunidadTarea> oportunidadTareas) {
        this.oportunidadTareas = oportunidadTareas;
    }

    public int getIdEtapaPadre() {
        return idEtapaPadre;
    }

    public void setIdEtapaPadre(int idEtapaPadre) {
        this.idEtapaPadre = idEtapaPadre;
    }

    @Override
    public boolean isAutoGeneratedId() {
        return true;
    }

    @Override
    public String getTableName() {
        return Contract.OportunidadEtapa.TABLE_NAME;
    }

    @Override
    public void setValues() {
        setValue(Contract.OportunidadEtapa.COLUMN_ID_ETAPA, this.idEtapa);
        setValue(Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD, this.idOportunidad);
        setValue(Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD_INT, this._idOportunidad);
        setValue(Contract.OportunidadEtapa.COLUMN_FECHA_INICIO, this.fechaInicio);
        setValue(Contract.OportunidadEtapa.COLUMN_OBSERVACION, this.observacion);
        setValue(Contract.OportunidadEtapa.COLUMN_FECHA_FIN, this.fechaFin);
        setValue(Contract.OportunidadEtapa.COLUMN_ESTADO, this.estado);
        setValue(Contract.OportunidadEtapa.COLUMN_ID_ETAPA_PADRE, this.idEtapaPadre);
        setValue(Contract.OportunidadEtapa.COLUMN_FECHA_FIN_PLAN, this.fechaFinPlan);
    }

    @Override
    public Object getValue(String key) {
        return null;
    }

    @Override
    public String getDescription() {
        return null;
    }

    public static List<OportunidadEtapa> getEtapasOportunidad(DataBase db, int idOportunidad) {
        Cursor c = db.query(Contract.OportunidadEtapa.TABLE_NAME, new String[]{Contract.OportunidadEtapa._ID, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD, Contract.OportunidadEtapa.COLUMN_FECHA_FIN_PLAN,
                        Contract.OportunidadEtapa.COLUMN_ID_ETAPA, Contract.OportunidadEtapa.COLUMN_FECHA_INICIO, Contract.OportunidadEtapa.COLUMN_OBSERVACION,
                        Contract.OportunidadEtapa.COLUMN_FECHA_FIN, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD_INT, Contract.OportunidadEtapa.COLUMN_ESTADO,
                Contract.OportunidadEtapa.COLUMN_ID_ETAPA_PADRE}
                , Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD + " = ?",  new String[]{idOportunidad + ""});

        List<OportunidadEtapa> list = new ArrayList<OportunidadEtapa>();
        while (c.moveToNext()) {
            OportunidadEtapa cont = new OportunidadEtapa();
            cont.setID(CursorUtils.getInt(c, Contract.OportunidadEtapa._ID));
            cont.setIdOportunidad(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD));
            cont.set_idOportunidad(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD_INT));
            cont.setIdEtapa(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_ETAPA));
            cont.setFechaInicio(CursorUtils.getDate(c, Contract.OportunidadEtapa.COLUMN_FECHA_INICIO));
            cont.setObservacion(CursorUtils.getString(c, Contract.OportunidadEtapa.COLUMN_OBSERVACION));
            cont.setFechaFin(CursorUtils.getDate(c, Contract.OportunidadEtapa.COLUMN_FECHA_FIN));
            cont.setEstado(CursorUtils.getString(c, Contract.OportunidadEtapa.COLUMN_ESTADO));
            cont.setIdEtapaPadre(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_ETAPA_PADRE));
            cont.setFechaFinPlan(CursorUtils.getDate(c, Contract.OportunidadEtapa.COLUMN_FECHA_FIN_PLAN));

            cont.setEtapa(Etapa.getEtapaById(db, cont.getIdEtapa()));

            list.add(cont);
        }
        c.close();
        return list;
    }

    public static List<OportunidadEtapa> getEtapasOportunidadInt(DataBase db, long id) {
        Cursor c = db.query(Contract.OportunidadEtapa.TABLE_NAME, new String[]{Contract.OportunidadEtapa._ID, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD, Contract.OportunidadEtapa.COLUMN_FECHA_FIN_PLAN,
                        Contract.OportunidadEtapa.COLUMN_ID_ETAPA, Contract.OportunidadEtapa.COLUMN_FECHA_INICIO, Contract.OportunidadEtapa.COLUMN_OBSERVACION,
                        Contract.OportunidadEtapa.COLUMN_FECHA_FIN, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD_INT, Contract.OportunidadEtapa.COLUMN_ESTADO,
                        Contract.OportunidadEtapa.COLUMN_ID_ETAPA_PADRE},
                Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD_INT + " = ?",  new String[]{id + ""});

        List<OportunidadEtapa> list = new ArrayList<OportunidadEtapa>();
        while (c.moveToNext()) {
            OportunidadEtapa cont = new OportunidadEtapa();
            cont.setID(CursorUtils.getInt(c, Contract.OportunidadEtapa._ID));
            cont.setIdOportunidad(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD));
            cont.set_idOportunidad(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD_INT));
            cont.setIdEtapa(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_ETAPA));
            cont.setFechaInicio(CursorUtils.getDate(c, Contract.OportunidadEtapa.COLUMN_FECHA_INICIO));
            cont.setObservacion(CursorUtils.getString(c, Contract.OportunidadEtapa.COLUMN_OBSERVACION));
            cont.setFechaFin(CursorUtils.getDate(c, Contract.OportunidadEtapa.COLUMN_FECHA_FIN));
            cont.setEstado(CursorUtils.getString(c, Contract.OportunidadEtapa.COLUMN_ESTADO));
            cont.setIdEtapaPadre(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_ETAPA_PADRE));
            cont.setFechaFinPlan(CursorUtils.getDate(c, Contract.OportunidadEtapa.COLUMN_FECHA_FIN_PLAN));

            cont.setEtapa(Etapa.getEtapaById(db, cont.getIdEtapa()));

            list.add(cont);
        }
        c.close();
        return list;
    }

    public static OportunidadEtapa getEtapaOportunidad(DataBase db, int idOportunidad, int idEtapa) {
        Cursor c = db.query(Contract.OportunidadEtapa.TABLE_NAME, new String[]{Contract.OportunidadEtapa._ID, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD, Contract.OportunidadEtapa.COLUMN_FECHA_FIN_PLAN,
                        Contract.OportunidadEtapa.COLUMN_ID_ETAPA, Contract.OportunidadEtapa.COLUMN_FECHA_INICIO, Contract.OportunidadEtapa.COLUMN_OBSERVACION,
                        Contract.OportunidadEtapa.COLUMN_FECHA_FIN, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD_INT, Contract.OportunidadEtapa.COLUMN_ESTADO,
                        Contract.OportunidadEtapa.COLUMN_ID_ETAPA_PADRE},
                Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD + " = ? AND " + Contract.OportunidadEtapa.COLUMN_ID_ETAPA + " = ?",  new String[]{idOportunidad + "", idEtapa + ""});

        OportunidadEtapa cont = new OportunidadEtapa();
        while (c.moveToNext()) {

            cont.setID(CursorUtils.getInt(c, Contract.OportunidadEtapa._ID));
            cont.setIdOportunidad(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD));
            cont.set_idOportunidad(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD_INT));
            cont.setIdEtapa(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_ETAPA));
            cont.setFechaInicio(CursorUtils.getDate(c, Contract.OportunidadEtapa.COLUMN_FECHA_INICIO));
            cont.setObservacion(CursorUtils.getString(c, Contract.OportunidadEtapa.COLUMN_OBSERVACION));
            cont.setFechaFin(CursorUtils.getDate(c, Contract.OportunidadEtapa.COLUMN_FECHA_FIN));
            cont.setEstado(CursorUtils.getString(c, Contract.OportunidadEtapa.COLUMN_ESTADO));
            cont.setOportunidadTareas(OportunidadTarea.getTareasOportunidadByEtapa(db, cont.getIdOportunidad(), cont.getIdEtapa()));
            cont.setIdEtapaPadre(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_ETAPA_PADRE));
            cont.setFechaFinPlan(CursorUtils.getDate(c, Contract.OportunidadEtapa.COLUMN_FECHA_FIN_PLAN));

            cont.setEtapa(Etapa.getEtapaById(db, cont.getIdEtapa()));
        }
        c.close();
        return cont;
    }



    public static OportunidadEtapa getEtapaOportunidadInt(DataBase db, long idOportunidad, int idEtapa) {
        Cursor c = db.query(Contract.OportunidadEtapa.TABLE_NAME, new String[]{Contract.OportunidadEtapa._ID, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD, Contract.OportunidadEtapa.COLUMN_FECHA_FIN_PLAN,
                        Contract.OportunidadEtapa.COLUMN_ID_ETAPA, Contract.OportunidadEtapa.COLUMN_FECHA_INICIO, Contract.OportunidadEtapa.COLUMN_OBSERVACION,
                        Contract.OportunidadEtapa.COLUMN_FECHA_FIN, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD_INT, Contract.OportunidadEtapa.COLUMN_ESTADO,
                        Contract.OportunidadEtapa.COLUMN_ID_ETAPA_PADRE},
                Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD_INT + " = ? AND " + Contract.OportunidadEtapa.COLUMN_ID_ETAPA + " = ?",  new String[]{idOportunidad + "", idEtapa + ""});

        OportunidadEtapa cont = new OportunidadEtapa();
        while (c.moveToNext()) {

            cont.setID(CursorUtils.getInt(c, Contract.OportunidadEtapa._ID));
            cont.setIdOportunidad(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD));
            cont.set_idOportunidad(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD_INT));
            cont.setIdEtapa(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_ETAPA));
            cont.setFechaInicio(CursorUtils.getDate(c, Contract.OportunidadEtapa.COLUMN_FECHA_INICIO));
            cont.setObservacion(CursorUtils.getString(c, Contract.OportunidadEtapa.COLUMN_OBSERVACION));
            cont.setFechaFin(CursorUtils.getDate(c, Contract.OportunidadEtapa.COLUMN_FECHA_FIN));
            cont.setEstado(CursorUtils.getString(c, Contract.OportunidadEtapa.COLUMN_ESTADO));
            cont.setOportunidadTareas(OportunidadTarea.getTareasOportunidadByEtapa(db, cont.getIdOportunidad(), cont.getIdEtapa()));
            cont.setIdEtapaPadre(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_ETAPA_PADRE));
            cont.setFechaFinPlan(CursorUtils.getDate(c, Contract.OportunidadEtapa.COLUMN_FECHA_FIN_PLAN));

            cont.setEtapa(Etapa.getEtapaById(db, cont.getIdEtapa()));
        }
        c.close();
        return cont;
    }

    public static List<OportunidadEtapa> getEtapaOportunidadHijas(DataBase db, long idOportunidad, int idEtapa) {
        Cursor c = db.query(Contract.OportunidadEtapa.TABLE_NAME, new String[]{Contract.OportunidadEtapa._ID, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD, Contract.OportunidadEtapa.COLUMN_FECHA_FIN_PLAN,
                        Contract.OportunidadEtapa.COLUMN_ID_ETAPA, Contract.OportunidadEtapa.COLUMN_FECHA_INICIO, Contract.OportunidadEtapa.COLUMN_OBSERVACION,
                        Contract.OportunidadEtapa.COLUMN_FECHA_FIN, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD_INT, Contract.OportunidadEtapa.COLUMN_ESTADO,
                        Contract.OportunidadEtapa.COLUMN_ID_ETAPA_PADRE},
                Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD_INT + " = ? AND " + Contract.OportunidadEtapa.COLUMN_ID_ETAPA_PADRE + " = ?",  new String[]{idOportunidad + "", idEtapa + ""});

        List<OportunidadEtapa> list = new ArrayList<OportunidadEtapa>();
        while (c.moveToNext()) {
            OportunidadEtapa cont = new OportunidadEtapa();
            cont.setID(CursorUtils.getInt(c, Contract.OportunidadEtapa._ID));
            cont.setIdOportunidad(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD));
            cont.set_idOportunidad(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD_INT));
            cont.setIdEtapa(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_ETAPA));
            cont.setFechaInicio(CursorUtils.getDate(c, Contract.OportunidadEtapa.COLUMN_FECHA_INICIO));
            cont.setObservacion(CursorUtils.getString(c, Contract.OportunidadEtapa.COLUMN_OBSERVACION));
            cont.setFechaFin(CursorUtils.getDate(c, Contract.OportunidadEtapa.COLUMN_FECHA_FIN));
            cont.setEstado(CursorUtils.getString(c, Contract.OportunidadEtapa.COLUMN_ESTADO));
            cont.setIdEtapaPadre(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_ETAPA_PADRE));
            cont.setFechaFinPlan(CursorUtils.getDate(c, Contract.OportunidadEtapa.COLUMN_FECHA_FIN_PLAN));

            cont.setEtapa(Etapa.getEtapaById(db, cont.getIdEtapa()));

            list.add(cont);
        }
        c.close();
        return list;
    }

    public static List<OportunidadEtapa> getEtapaOportunidadHijasExt(DataBase db, int idOportunidad, int idEtapa) {
        Cursor c = db.query(Contract.OportunidadEtapa.TABLE_NAME, new String[]{Contract.OportunidadEtapa._ID, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD, Contract.OportunidadEtapa.COLUMN_FECHA_FIN_PLAN,
                        Contract.OportunidadEtapa.COLUMN_ID_ETAPA, Contract.OportunidadEtapa.COLUMN_FECHA_INICIO, Contract.OportunidadEtapa.COLUMN_OBSERVACION,
                        Contract.OportunidadEtapa.COLUMN_FECHA_FIN, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD_INT, Contract.OportunidadEtapa.COLUMN_ESTADO,
                        Contract.OportunidadEtapa.COLUMN_ID_ETAPA_PADRE},
                Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD + " = ? AND " + Contract.OportunidadEtapa.COLUMN_ID_ETAPA_PADRE + " = ?",  new String[]{idOportunidad + "", idEtapa + ""});

        List<OportunidadEtapa> list = new ArrayList<OportunidadEtapa>();
        while (c.moveToNext()) {
            OportunidadEtapa cont = new OportunidadEtapa();
            cont.setID(CursorUtils.getInt(c, Contract.OportunidadEtapa._ID));
            cont.setIdOportunidad(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD));
            cont.set_idOportunidad(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD_INT));
            cont.setIdEtapa(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_ETAPA));
            cont.setFechaInicio(CursorUtils.getDate(c, Contract.OportunidadEtapa.COLUMN_FECHA_INICIO));
            cont.setObservacion(CursorUtils.getString(c, Contract.OportunidadEtapa.COLUMN_OBSERVACION));
            cont.setFechaFin(CursorUtils.getDate(c, Contract.OportunidadEtapa.COLUMN_FECHA_FIN));
            cont.setEstado(CursorUtils.getString(c, Contract.OportunidadEtapa.COLUMN_ESTADO));
            cont.setIdEtapaPadre(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_ETAPA_PADRE));
            cont.setFechaFinPlan(CursorUtils.getDate(c, Contract.OportunidadEtapa.COLUMN_FECHA_FIN_PLAN));

            cont.setEtapa(Etapa.getEtapaById(db, cont.getIdEtapa()));

            list.add(cont);
        }
        c.close();
        return list;
    }

    public static OportunidadEtapa getEtapaOportunidad(DataBase db, long idEtapa) {
        Cursor c = db.query(Contract.OportunidadEtapa.TABLE_NAME, new String[]{Contract.OportunidadEtapa._ID, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD, Contract.OportunidadEtapa.COLUMN_FECHA_FIN_PLAN,
                        Contract.OportunidadEtapa.COLUMN_ID_ETAPA, Contract.OportunidadEtapa.COLUMN_FECHA_INICIO, Contract.OportunidadEtapa.COLUMN_OBSERVACION,
                        Contract.OportunidadEtapa.COLUMN_FECHA_FIN, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD_INT, Contract.OportunidadEtapa.COLUMN_ESTADO,
                        Contract.OportunidadEtapa.COLUMN_ID_ETAPA_PADRE},
                Contract.OportunidadEtapa._ID + " = ? ",  new String[]{idEtapa + ""});

        OportunidadEtapa cont = new OportunidadEtapa();
        while (c.moveToNext()) {

            cont.setID(CursorUtils.getInt(c, Contract.OportunidadEtapa._ID));
            cont.setIdOportunidad(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD));
            cont.set_idOportunidad(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_OPORTUNIDAD_INT));
            cont.setIdEtapa(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_ETAPA));
            cont.setFechaInicio(CursorUtils.getDate(c, Contract.OportunidadEtapa.COLUMN_FECHA_INICIO));
            cont.setObservacion(CursorUtils.getString(c, Contract.OportunidadEtapa.COLUMN_OBSERVACION));
            cont.setFechaFin(CursorUtils.getDate(c, Contract.OportunidadEtapa.COLUMN_FECHA_FIN));
            cont.setEstado(CursorUtils.getString(c, Contract.OportunidadEtapa.COLUMN_ESTADO));
            cont.setOportunidadTareas(OportunidadTarea.getTareasOportunidadByEtapa(db, cont.getIdOportunidad(), cont.getIdEtapa()));
            cont.setIdEtapaPadre(CursorUtils.getInt(c, Contract.OportunidadEtapa.COLUMN_ID_ETAPA_PADRE));
            cont.setFechaFinPlan(CursorUtils.getDate(c, Contract.OportunidadEtapa.COLUMN_FECHA_FIN_PLAN));

            cont.setEtapa(Etapa.getEtapaById(db, cont.getIdEtapa()));
        }
        c.close();
        return cont;
    }
}