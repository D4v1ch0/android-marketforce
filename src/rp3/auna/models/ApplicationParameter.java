package rp3.auna.models;

import android.database.Cursor;
import android.util.Log;

import java.util.ArrayList;
import java.util.List;

import rp3.auna.db.Contract;
import rp3.auna.models.ventanueva.LlamadaVta;
import rp3.data.entity.EntityBase;
import rp3.db.QueryDir;
import rp3.db.sqlite.DataBase;
import rp3.util.CursorUtils;

/**
 * Created by Jesus Villa on 20/12/2017.
 */

public class ApplicationParameter extends EntityBase<ApplicationParameter> {
    private long id;
    private String ApplicationId;
    private String ParameterId;
    private String Value;
    private String Label;
    private String Description;

    //region Encapsulamiento

    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public String getApplicationId() {
        return ApplicationId;
    }

    public void setApplicationId(String applicationId) {
        ApplicationId = applicationId;
    }

    public String getParameterId() {
        return ParameterId;
    }

    public void setParameterId(String parameterId) {
        ParameterId = parameterId;
    }

    public String getValue() {
        return Value;
    }

    public void setValue(String value) {
        Value = value;
    }

    public String getLabel() {
        return Label;
    }

    public void setLabel(String label) {
        Label = label;
    }

    public String getDescripcion() {
        return Description;
    }

    public void setDescription(String description) {
        Description = description;
    }

    //endregion

    //region Methods DB

    @Override
    public long getID() {
        // TODO Auto-generated method stub
        return id;
    }

    @Override
    public void setID(long id) {
        this.id = id;

    }

    @Override
    public boolean isAutoGeneratedId() {
        // TODO Auto-generated method stub
        return true;
    }

    @Override
    public String getTableName() {
        // TODO Auto-generated method stub
        return Contract.ApplicationParameter.TABLE_NAME;
    }

    @Override
    public void setValues() {
        setValue(Contract.ApplicationParameter.COLUMN_APPLICATIONPARAMETER_APPLICATIONID, this.ApplicationId);
        setValue(Contract.ApplicationParameter.COLUMN_APPLICATIONPARAMETER_PARAMETERID, this.ParameterId);
        setValue(Contract.ApplicationParameter.COLUMN_APPLICATIONPARAMETER_VALUE, this.Value);
        setValue(Contract.ApplicationParameter.COLUMN_APPLICATIONPARAMETER_LABEL, this.Label);
        setValue(Contract.ApplicationParameter.COLUMN_APPLICATIONPARAMETER_DESCRIPTION, this.Description);
    }

    @Override
    public Object getValue(String key) {
        // TODO Auto-generated method stub
        return null;
    }

    @Override
    public String getDescription() {
        // TODO Auto-generated method stub
        return null;
    }

    //endregion

    public static List<ApplicationParameter> getAll(DataBase db){
        String query = "SELECT * FROM tbApplicationParameter";

        Cursor c = db.rawQuery(query);
        List<ApplicationParameter> list = new ArrayList<ApplicationParameter>();

        if(c.moveToFirst()){
            do
            {
                ApplicationParameter llamadaVta =  new ApplicationParameter();
                llamadaVta.setId(CursorUtils.getInt(c,Contract.ApplicationParameter._ID));
                llamadaVta.setApplicationId(CursorUtils.getString(c, Contract.ApplicationParameter.COLUMN_APPLICATIONPARAMETER_APPLICATIONID));
                llamadaVta.setParameterId(CursorUtils.getString(c, Contract.ApplicationParameter.COLUMN_APPLICATIONPARAMETER_PARAMETERID));
                llamadaVta.setValue(CursorUtils.getString(c, Contract.ApplicationParameter.COLUMN_APPLICATIONPARAMETER_VALUE));
                llamadaVta.setLabel(CursorUtils.getString(c,Contract.ApplicationParameter.COLUMN_APPLICATIONPARAMETER_LABEL));
                llamadaVta.setDescription(CursorUtils.getString(c,Contract.ApplicationParameter.COLUMN_APPLICATIONPARAMETER_DESCRIPTION));
                list.add(llamadaVta);
            }while(c.moveToNext());
        }
        c.close();
        return list;
    }

    public static ApplicationParameter getParameter(DataBase db,String parameterId,String label){
        String query = "SELECT * FROM tbApplicationParameter WHERE PARAMETERID = '"+parameterId+"' AND LABEL = '"+label+"'";

        Cursor c = db.rawQuery(query);
        List<ApplicationParameter> list = new ArrayList<ApplicationParameter>();

        if(c.moveToFirst()){
            do
            {
                ApplicationParameter llamadaVta =  new ApplicationParameter();
                llamadaVta.setId(CursorUtils.getInt(c,Contract.ApplicationParameter._ID));
                llamadaVta.setApplicationId(CursorUtils.getString(c, Contract.ApplicationParameter.COLUMN_APPLICATIONPARAMETER_APPLICATIONID));
                llamadaVta.setParameterId(CursorUtils.getString(c, Contract.ApplicationParameter.COLUMN_APPLICATIONPARAMETER_PARAMETERID));
                llamadaVta.setValue(CursorUtils.getString(c, Contract.ApplicationParameter.COLUMN_APPLICATIONPARAMETER_VALUE));
                llamadaVta.setLabel(CursorUtils.getString(c,Contract.ApplicationParameter.COLUMN_APPLICATIONPARAMETER_LABEL));
                llamadaVta.setDescription(CursorUtils.getString(c,Contract.ApplicationParameter.COLUMN_APPLICATIONPARAMETER_DESCRIPTION));
                list.add(llamadaVta);
                break;
            }while(c.moveToNext());
        }
        c.close();
        if(list.size()>0){
            return list.get(0);
        }
        return null;
    }

    public static List<ApplicationParameter> getParameter(DataBase db,String label){
        String query = "SELECT * FROM tbApplicationParameter WHERE LABEL = '"+label+"'";

        Cursor c = db.rawQuery(query);
        List<ApplicationParameter> list = new ArrayList<ApplicationParameter>();

        if(c.moveToFirst()){
            do
            {
                ApplicationParameter llamadaVta =  new ApplicationParameter();
                llamadaVta.setId(CursorUtils.getInt(c,Contract.ApplicationParameter._ID));
                llamadaVta.setApplicationId(CursorUtils.getString(c, Contract.ApplicationParameter.COLUMN_APPLICATIONPARAMETER_APPLICATIONID));
                llamadaVta.setParameterId(CursorUtils.getString(c, Contract.ApplicationParameter.COLUMN_APPLICATIONPARAMETER_PARAMETERID));
                llamadaVta.setValue(CursorUtils.getString(c, Contract.ApplicationParameter.COLUMN_APPLICATIONPARAMETER_VALUE));
                llamadaVta.setLabel(CursorUtils.getString(c,Contract.ApplicationParameter.COLUMN_APPLICATIONPARAMETER_LABEL));
                llamadaVta.setDescription(CursorUtils.getString(c,Contract.ApplicationParameter.COLUMN_APPLICATIONPARAMETER_DESCRIPTION));
                list.add(llamadaVta);
            }while(c.moveToNext());
        }
        c.close();

        return list;
    }

}
